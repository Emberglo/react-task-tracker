import Header from './components/Header'
import Tasks from './components/Tasks'
import AddTask from './components/AddTask'
import { useState } from "react"

function App() {
  // NOTE - having tasks state at this level means it can be accessed by all children components
  const [tasks, setTasks] = useState([
    {
        id: 1,
        text: "Doctors Appointment",
        day: "Feb 5th at 2:30pm",
        reminder: true,
    },
    {
        id: 2,
        text: "Meeting at School",
        day: "Feb 6th at 1:30pm",
        reminder: true,
    },
    {
        id: 3,
        text: "Food Shopping",
        day: "Feb 7th at 12:30pm",
        reminder: false,
    },
  ]);

  const [showAddTask, setShowAddTask] = useState(false);

  // SECTION - Add Task

  const addTask = (task) => {
    // NOTE - get a random number for the ID since we don't have a backend to provide one
    const id = Math.floor(Math.random() * 10000) + 1;
    
    const newTask = {id, ...task};

    setTasks([...tasks, newTask]);
  }

  // SECTION - Delete Task

  const deleteTask = (id) => {
    // NOTE - uses setTasks to update the state above with the new array generated by the filter
    setTasks(tasks.filter((task) => task.id !== id));
  }

  //SECTION - Toggle Reminder

  const toggleReminder = (id) => {
    // NOTE - find the task that matches and spread the task then update the reminder to the opposite of whatever the current value is
    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))
  }
  
  return (
    <div className="container">
      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />
      {/* NOTE - the && operator here is a shortcut for doing a ternary when you don't need an alternative */}
      {showAddTask && <AddTask onAdd={addTask} />}
      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} toggleReminder={toggleReminder} /> : 'No Tasks To Show'}
    </div>
  );
}

export default App;
